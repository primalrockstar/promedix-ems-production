import React, { useState } from 'react';
import { BookOpen, Clock, Target, Key, Lightbulb, AlertTriangle, ChevronDown, ChevronRight, Search } from 'lucide-react';
import { chapter2StudyNotes, StudySection, StudyChapter } from "../../data/emtb/chapter2-study-notes";

interface StudySection {
  id: string;
  title: string;
  content: string;
  keyPoints: string[];
  clinicalNote?: string;
  rememberThis?: string;
}

interface StudyChapter {
  id: string;
  chapterNumber: number;
  title: string;
  description: string;
  estimatedStudyTime: string;
  learningObjectives: string[];
  sections: StudySection[];
  keyTerms: { term: string; definition: string }[];
  criticalConcepts: string[];
}

const EMTBStudyNotes: React.FC = () => {
  const [selectedChapter, setSelectedChapter] = useState<StudyChapter>(chapter2StudyNotes);
  const [expandedSections, setExpandedSections] = useState<Set<string>>(new Set(['intro-safety']));
  const [searchTerm, setSearchTerm] = useState('');
  const [activeTab, setActiveTab] = useState<'content' | 'terms' | 'concepts'>('content');

  const toggleSection = (sectionId: string) => {
    const newExpanded = new Set(expandedSections);
    if (newExpanded.has(sectionId)) {
      newExpanded.delete(sectionId);
    } else {
      newExpanded.add(sectionId);
    }
    setExpandedSections(newExpanded);
  };

  const expandAll = () => {
    setExpandedSections(new Set(selectedChapter.sections.map(s => s.id)));
  };

  const collapseAll = () => {
    setExpandedSections(new Set());
  };

  const filteredSections = selectedChapter.sections.filter(section =>
    section.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
    section.content.toLowerCase().includes(searchTerm.toLowerCase()) ||
    section.keyPoints.some(point => point.toLowerCase().includes(searchTerm.toLowerCase()))
  );

  const filteredTerms = selectedChapter.keyTerms.filter(term =>
    term.term.toLowerCase().includes(searchTerm.toLowerCase()) ||
    term.definition.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="bg-white rounded-lg shadow-lg p-6 mb-6">
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center space-x-3">
              <BookOpen className="h-8 w-8 text-blue-600" />
              <div>
                <h1 className="text-3xl font-bold text-gray-900">EMT-B Study Notes</h1>
                <p className="text-gray-600">Comprehensive study reference materials</p>
              </div>
            </div>
            <div className="flex space-x-2">
              <button
                onClick={expandAll}
                className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors text-sm"
              >
                Expand All
              </button>
              <button
                onClick={collapseAll}
                className="px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors text-sm"
              >
                Collapse All
              </button>
            </div>
          </div>

          {/* Search Bar */}
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
            <input
              type="text"
              placeholder="Search study notes, terms, or concepts..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>
        </div>

        {/* Chapter Info Card */}
        <div className="bg-white rounded-lg shadow-lg p-6 mb-6">
          <div className="grid md:grid-cols-2 gap-6">
            <div>
              <h2 className="text-2xl font-bold text-gray-900 mb-2">
                Chapter {selectedChapter.chapterNumber}: {selectedChapter.title}
              </h2>
              <p className="text-gray-700 mb-4">{selectedChapter.description}</p>
              
              <div className="flex items-center space-x-4 text-sm text-gray-600">
                <div className="flex items-center">
                  <Clock className="h-4 w-4 mr-1" />
                  {selectedChapter.estimatedStudyTime}
                </div>
                <div className="flex items-center">
                  <Target className="h-4 w-4 mr-1" />
                  {selectedChapter.sections.length} sections
                </div>
              </div>
            </div>

            <div>
              <h3 className="font-semibold text-gray-900 mb-2 flex items-center">
                <Target className="h-5 w-5 mr-2 text-blue-600" />
                Learning Objectives
              </h3>
              <ul className="space-y-1 text-sm text-gray-700">
                {selectedChapter.learningObjectives.map((objective, index) => (
                  <li key={index} className="flex items-start">
                    <span className="text-blue-600 mr-2">•</span>
                    {objective}
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="bg-white rounded-lg shadow-lg mb-6">
          <div className="border-b border-gray-200">
            <nav className="flex space-x-8 px-6">
              {[
                { id: 'content', label: 'Study Content', icon: BookOpen },
                { id: 'terms', label: 'Key Terms', icon: Key },
                { id: 'concepts', label: 'Critical Concepts', icon: Lightbulb }
              ].map(({ id, label, icon: Icon }) => (
                <button
                  key={id}
                  onClick={() => setActiveTab(id as any)}
                  className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${
                    activeTab === id
                      ? 'border-blue-500 text-blue-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }`}
                >
                  <Icon className="h-4 w-4" />
                  <span>{label}</span>
                </button>
              ))}
            </nav>
          </div>

          {/* Tab Content */}
          <div className="p-6">
            {activeTab === 'content' && (
              <div className="space-y-4">
                {filteredSections.map((section) => (
                  <div key={section.id} className="border border-gray-200 rounded-lg">
                    <button
                      onClick={() => toggleSection(section.id)}
                      className="w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 rounded-t-lg"
                    >
                      <h3 className="font-semibold text-gray-900">{section.title}</h3>
                      {expandedSections.has(section.id) ? (
                        <ChevronDown className="h-5 w-5 text-gray-500" />
                      ) : (
                        <ChevronRight className="h-5 w-5 text-gray-500" />
                      )}
                    </button>

                    {expandedSections.has(section.id) && (
                      <div className="px-4 pb-4">
                        {/* Content */}
                        <p className="text-gray-700 mb-4">{section.content}</p>

                        {/* Key Points */}
                        <div className="mb-4">
                          <h4 className="font-medium text-gray-900 mb-2 flex items-center">
                            <Target className="h-4 w-4 mr-1 text-blue-600" />
                            Key Points
                          </h4>
                          <ul className="space-y-1">
                            {section.keyPoints.map((point, index) => (
                              <li key={index} className="flex items-start text-sm text-gray-700">
                                <span className="text-blue-600 mr-2 mt-1">•</span>
                                {point}
                              </li>
                            ))}
                          </ul>
                        </div>

                        {/* Clinical Note */}
                        {section.clinicalNote && (
                          <div className="bg-blue-50 border-l-4 border-blue-400 p-3 mb-4">
                            <div className="flex items-start">
                              <AlertTriangle className="h-5 w-5 text-blue-600 mr-2 flex-shrink-0 mt-0.5" />
                              <div>
                                <h5 className="font-medium text-blue-900">Clinical Note</h5>
                                <p className="text-blue-800 text-sm">{section.clinicalNote}</p>
                              </div>
                            </div>
                          </div>
                        )}

                        {/* Remember This */}
                        {section.rememberThis && (
                          <div className="bg-yellow-50 border-l-4 border-yellow-400 p-3">
                            <div className="flex items-start">
                              <Lightbulb className="h-5 w-5 text-yellow-600 mr-2 flex-shrink-0 mt-0.5" />
                              <div>
                                <h5 className="font-medium text-yellow-900">Remember This</h5>
                                <p className="text-yellow-800 text-sm">{section.rememberThis}</p>
                              </div>
                            </div>
                          </div>
                        )}
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}

            {activeTab === 'terms' && (
              <div className="grid gap-4 md:grid-cols-2">
                {filteredTerms.map((term, index) => (
                  <div key={index} className="bg-gray-50 rounded-lg p-4">
                    <h4 className="font-semibold text-gray-900 mb-2">{term.term}</h4>
                    <p className="text-gray-700 text-sm">{term.definition}</p>
                  </div>
                ))}
              </div>
            )}

            {activeTab === 'concepts' && (
              <div className="space-y-3">
                {selectedChapter.criticalConcepts.map((concept, index) => (
                  <div key={index} className="flex items-start bg-red-50 p-4 rounded-lg">
                    <AlertTriangle className="h-5 w-5 text-red-600 mr-3 flex-shrink-0 mt-0.5" />
                    <p className="text-red-800">{concept}</p>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>

        {/* Study Tips */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h3 className="font-bold text-lg text-gray-900 mb-4 flex items-center">
            <Lightbulb className="h-5 w-5 mr-2 text-yellow-600" />
            Study Tips for This Chapter
          </h3>
          <div className="grid md:grid-cols-3 gap-4 text-sm">
            <div className="bg-blue-50 p-4 rounded-lg">
              <h4 className="font-semibold text-blue-900 mb-2">Focus Areas</h4>
              <ul className="space-y-1 text-blue-800">
                <li>• PPE procedures and infection control</li>
                <li>• Stress management techniques</li>
                <li>• Professional safety protocols</li>
              </ul>
            </div>
            <div className="bg-green-50 p-4 rounded-lg">
              <h4 className="font-semibold text-green-900 mb-2">Practice Application</h4>
              <ul className="space-y-1 text-green-800">
                <li>• Role-play stress scenarios</li>
                <li>• Practice PPE donning/doffing</li>
                <li>• Review workplace policies</li>
              </ul>
            </div>
            <div className="bg-purple-50 p-4 rounded-lg">
              <h4 className="font-semibold text-purple-900 mb-2">Assessment Prep</h4>
              <ul className="space-y-1 text-purple-800">
                <li>• Review flashcards regularly</li>
                <li>• Practice with study partner</li>
                <li>• Test knowledge with scenarios</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default EMTBStudyNotes;

